import asyncio
import logging
from decouple import config
from aiogram import Bot, Dispatcher, types
from aiogram.filters.command import Command
#–º–æ–∫ –∞–ø—ã
# –ª–æ–≥–∏
logging.basicConfig(level=logging.INFO)
BOT_TOKEN = config('TELEGRAM_BOT_TOKEN')
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()


@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    description = (
        "–ü—Ä–∏–≤–µ—Ç, –∫–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–µ—Ä! üöó\n"
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ –¥–ª—è –∫–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫ –º–∞—à–∏–Ω!\n"
        "–ß—Ç–æ–±—ã –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ –±–æ—Ç–∞, –Ω–∞–∂–º–∏ –Ω–∞ –∫–æ–º–∞–Ω–¥—É /manual"
    )
    kb = [
        [
            types.KeyboardButton(text="–ü—Ä–∏–º–µ—Ä 1"),
            types.KeyboardButton(text="–ü—Ä–∏–º–µ—Ä 2"),
            types.KeyboardButton(text="Example")
        ],
    ]
    keyboard = types.ReplyKeyboardMarkup(
        keyboard=kb,
        resize_keyboard=True,
        input_field_placeholder="–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ"
    )
    await message.answer(description, reply_markup=keyboard)


@dp.message(Command("manual"))
async def cmd_manual(message: types.Message):
    help_text = (
        "manual cmd"
    )

    await message.answer(help_text)


@dp.message(Command("collection"))
async def cmd_collection(message: types.Message):
    description = (
        "collection"
    )
    await message.answer(description)


@dp.message(Command("add_to_collection"))
async def cmd_add_to_collection(message: types.Message):
    description = (
        "add_to_collection"
    )
    await message.answer(description)


@dp.message(Command("deck"))
async def cmd_deck(message: types.Message):
    description = (
        "deck"
    )
    await message.answer(description)


@dp.message(Command("support_project"))
async def cmd_support_project(message: types.Message):
    description = (
        "support_project"
    )
    await message.answer(description)


BUTTON_TEXTS = {"–ü—Ä–∏–º–µ—Ä 1", "–ü—Ä–∏–º–µ—Ä 2", "Example"}


@dp.message(lambda message: message.text in BUTTON_TEXTS)
async def handle_buttons(message: types.Message):
    if message.text == "–ü—Ä–∏–º–µ—Ä 1":
        await message.answer("–í—ã –Ω–∞–∂–∞–ª–∏ –∫–Ω–æ–ø–∫—É '–ü—Ä–∏–º–µ—Ä 1'")
    elif message.text == "–ü—Ä–∏–º–µ—Ä 2":
        await message.answer("–í—ã –Ω–∞–∂–∞–ª–∏ –∫–Ω–æ–ø–∫—É '–ü—Ä–∏–º–µ—Ä 2'")
    elif message.text == "Example":
        await message.answer("–í—ã –Ω–∞–∂–∞–ª–∏ –∫–Ω–æ–ø–∫—É 'Example'")


async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())